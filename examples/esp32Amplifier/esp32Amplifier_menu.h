/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
*/

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include <RuntimeMenuItem.h>
#include "tcMenuTfteSpi.h"
#include <graphics/MenuTouchScreenEncoder.h>
#include "EthernetTransport.h"
#include <RemoteConnector.h>
#include <ScrollChoiceMenuItem.h>

void setupMenu();  // forward reference of the menu setup function.
extern const PROGMEM ConnectorLocalInfo applicationInfo;  // contains app name and ID

// Global variables that need exporting

extern TFT_eSPI tft;
extern TfteSpiDrawable tftDrawable;
extern GraphicsDeviceRenderer renderer;
extern iotouch::ResistiveTouchInterrogator touchInterrogator;
extern MenuTouchScreenManager touchScreen;
extern WiFiServer server;

// Global Menu Item exports

extern TextMenuItem menuConnectivityPasscode;
extern TextMenuItem menuConnectivitySSID;
extern IpAddressMenuItem menuConnectivityIPAddress;
extern SubMenuItem menuConnectivity;
int fnStatusDataListRtCall(RuntimeMenuItem * item, uint8_t row, RenderFnMode mode, char * buffer, int bufferSize);
extern ListRuntimeMenuItem menuStatusDataList;
extern ActionMenuItem menuStatusShowDialogs;
extern AnalogMenuItem menuStatusRightVU;
extern AnalogMenuItem menuStatusLeftVU;
extern EnumMenuItem menuStatusAmpStatus;
extern SubMenuItem menuStatus;
extern ActionMenuItem menuSettingsSaveSettings;
extern AnalogMenuItem menuSettingsValveHeating;
extern AnalogMenuItem menuSettingsWarmUpTime;
extern ActionMenuItem menuChannelSettingsUpdateSettings;
extern TextMenuItem menuChannelSettingsName;
extern AnalogMenuItem menuChannelSettingsLevelTrim;
int fnChannelSettingsChannelRtCall(RuntimeMenuItem * item, uint8_t row, RenderFnMode mode, char * buffer, int bufferSize);
extern ScrollChoiceMenuItem menuChannelSettingsChannel;
extern SubMenuItem menuSettingsChannelSettings;
extern SubMenuItem menuSettings;
extern BooleanMenuItem menuMute;
extern BooleanMenuItem menuDirect;
extern ScrollChoiceMenuItem menuChannels;
extern AnalogMenuItem menuVolume;

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION onShowDialogs(int id);
void CALLBACK_FUNCTION onSaveSettings(int id);
void CALLBACK_FUNCTION onChannelSetttingsUpdate(int id);
void CALLBACK_FUNCTION onMuteSound(int id);
void CALLBACK_FUNCTION onAudioDirect(int id);
void CALLBACK_FUNCTION onChannelChanged(int id);
void CALLBACK_FUNCTION onVolumeChanged(int id);

#endif // MENU_GENERATED_CODE_H
