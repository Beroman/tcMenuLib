/*
    Menu based sketch generated by thecoderscorner.com Menu UI Generator.

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE
*/

#include <tcMenu.h>
#include "simpleMenuUno.h"


LiquidCrystal lcd(LCD_RS, LCD_EN, LCD_D4, LCD_D5, LCD_D6, LCD_D7, ioFrom8574(LCD_I2C_ADDR));
LiquidCrystalRenderer renderer(lcd, LCD_WIDTH, LCD_HEIGHT);

const char PROGMEM applicationName[] = "New Device";


// Export all the menu items, makes like easier for the compiler.

const PROGMEM AnalogMenuInfo minfoVoltage = { "Voltage", 6, 0xffff, 30000, NO_CALLBACK, 200, 100, "V" };
AnalogMenuItem menuVoltage(&minfoVoltage, 0, NULL);

const PROGMEM BooleanMenuInfo minfoMoreOptions = { "MoreOptions", 5, 0xffff, 1, NO_CALLBACK, NAMING_YES_NO };
BooleanMenuItem menuMoreOptions(&minfoMoreOptions, false, &menuVoltage);

const PROGMEM SubMenuInfo minfoSubMenu = { "SubMenu", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSubMenu(&menuMoreOptions, (const AnyMenuInfo*)&minfoSubMenu);
SubMenuItem menuSubMenu(&minfoSubMenu, &menuBackSubMenu, NULL);

const char enumStrChoices_0[] PROGMEM = "Pizza";
const char enumStrChoices_1[] PROGMEM = "Pasta";
const char enumStrChoices_2[] PROGMEM = "Salad";
const char* const enumStrChoices[] PROGMEM  = { enumStrChoices_0, enumStrChoices_1, enumStrChoices_2 };
const PROGMEM EnumMenuInfo minfoChoices = { "Choices", 3, 5, 3, NO_CALLBACK, enumStrChoices };
EnumMenuItem menuChoices(&minfoChoices, false, &menuSubMenu);

const PROGMEM BooleanMenuInfo minfoSwitch1 = { "Switch1", 2, 4, 1, onSwitch1, NAMING_ON_OFF };
BooleanMenuItem menuSwitch1(&minfoSwitch1, false, &menuChoices);

const PROGMEM AnalogMenuInfo minfoAnalog1 = { "Analog1", 1, 2, 255, onAnalog1, 0, 1, "" };
AnalogMenuItem menuAnalog1(&minfoAnalog1, 0, &menuSwitch1);



void setupMenu() {
    Wire.begin(); // if you're sure you don't use wire anywhere, you can remove this line.

    switches.initialise(ioUsingArduino(), true);
    menuMgr.initForEncoder(&renderer, &menuAnalog1, ENCODER_PIN_A, ENCODER_PIN_B, ENCODER_PIN_OK);
    lcd.begin(LCD_WIDTH, LCD_HEIGHT);


}
